@use 'sass:math';

// COLORS
$white100: var(--white100);

// Black
$black5p: var(--black5p);
$black10p: var(--black10p);
$black45p: var(--black45p);
$black100: var(--black100);

// Gray
$gray200: var(--gray200);

// Blue
$blue5p: var(--blue5p);
$blue10p: var(--blue10p);
$blue45p: var(--blue45p);
$blue50: var(--blue50);
$blue200: var(--blue200);
$blue300: var(--blue300);
$blue500: var(--blue500);
$blue600: var(--blue600);

// Green
$green45p: var(--green45p);
$green500: var(--green500);

// Red
$red500: var(--red500);

// SIZES
$sidebarWidth: var(--sidebarWidth);
$minWidth: 320;
$maxWidth: 1920;

// GLOBAL
$fontSize: 14px;
$lineHeight: 140%;
$transition: 0.25s ease;
$point: 4px;

// MEDIA
$screen-xxl: 1440px;
$screen-xl: 1200px;
$screen-lg: 991px;
$screen-md: 767px;
$screen-sm: 576px;

// MIXINS
@mixin flexHorizontalSpace($count) {
    display: flex;
    gap: $count * $point;
}

@mixin flexVerticalSpace($count) {
    display: flex;
    flex-direction: column;
    gap: $count * $point;
}

@function to-rem($px) {
    $result: math.div($px, 16) + rem;

    @return $result;
}

@mixin adaptiveValue($property, $startSize, $minSize, $widthFrom: $containerWidth, $widthTo: $minWidth, $keepSize: 0) {
    @if $startSize == 0 {
        $startSize: 0.000001;
    }

    @if $minSize == 0 {
        $minSize: 0.000001;
    }

    // Для calc();
    $addSize: math.div($startSize - $minSize, 16);

    // Брейк-поинты в EM
    $widthFromMedia: em($widthFrom);
    $widthToMedia: em($widthTo);

    // Формула плавающего значения
    $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
    $yIntersection: -$widthTo * $slope + $minSize;

    @if $yIntersection == 0 {
        $yIntersection: 0.000001;
    }

    $flyValue: #{to-rem($yIntersection)}' + ' #{$slope * 100}vw;

    // Получение значения свойства
    $propertyValue: #{'clamp(' to-rem($minSize) ',' $flyValue ',' to-rem($startSize) ')'};

    // Если отрицательные значения
    @if $minSize > $startSize {
        $propertyValue: #{'clamp(' to-rem($startSize) ',' $flyValue ',' to-rem($minSize) ')'};
    }

    // Если поддерживается clamp();
    @supports (#{$property}: $propertyValue) {
        #{$property}: $propertyValue;
    }

    // Если не поддерживается clamp();
    @supports not (#{$property}: $propertyValue) {
        #{$property}: calc(#{to-rem($minSize)} + #{$addSize} * (100vw - #{to-rem($widthTo)}) / #{math.div($widthFrom, 16) - math.div($widthTo, 16)});
    }

    // Устанавливаем значения по умолчанию
    @if $widthFrom != $maxWidth and $keepSize != 1 and $keepSize != 2 {
        @media (min-width: $widthFromMedia) {
            #{$property}: inherit;
        }
    }

    @if $widthTo != $minWidth and $keepSize != 1 and $keepSize != 3 {
        @media (max-width: $widthToMedia) {
            #{$property}: inherit;
        }
    }
}
